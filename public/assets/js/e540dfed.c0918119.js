"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[51328],{50294:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"API/GraphQL API","title":"GraphQL API","description":"We use federated GraphQL as main flexible way to query and modify web-app data. You can explore its schema directly at https://graphql.gratheon.com/graphql","source":"@site/docs/API/GraphQL API.md","sourceDirName":"API","slug":"/API/GraphQL API","permalink":"/docs/API/GraphQL API","draft":false,"unlisted":false,"editUrl":"https://github.com/gratheon/website/tree/main/packages/create-docusaurus/templates/shared/docs/API/GraphQL API.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"hide_table_of_contents":true},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd17 API","permalink":"/docs/API/"},"next":{"title":"REST APIs","permalink":"/docs/API/REST APIs"}}');var s=t(74848),i=t(28453);const a={sidebar_position:1,hide_table_of_contents:!0},o=void 0,c={},d=[{value:"Authentication",id:"authentication",level:2},{value:"Share Token Authentication (Read-Only Access)",id:"share-token-authentication-read-only-access",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["We use federated GraphQL as main flexible way to query and modify web-app data. You can explore its schema directly at ",(0,s.jsx)(n.a,{href:"https://graphql.gratheon.com/graphql",children:"https://graphql.gratheon.com/graphql"})]}),"\n",(0,s.jsx)(n.p,{children:"This API is most flexible, but it is also changing often and can introduce breaking changes"}),"\n",(0,s.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,s.jsxs)(n.p,{children:["Standard authentication uses a JWT passed via the ",(0,s.jsx)(n.code,{children:"token"})," HTTP header or a ",(0,s.jsx)(n.code,{children:"gratheon_session"})," cookie. API tokens can be generated in the user settings and used via the ",(0,s.jsx)(n.code,{children:"Authorization: Bearer <token>"})," header."]}),"\n",(0,s.jsx)(n.h3,{id:"share-token-authentication-read-only-access",children:"Share Token Authentication (Read-Only Access)"}),"\n",(0,s.jsxs)(n.p,{children:["For publicly shared resources like inspection views, a special ",(0,s.jsx)(n.strong,{children:"Share Token"})," is used. This token provides limited, read-only access based on predefined scopes."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Header:"})," When making requests using a share token, include it in the ",(0,s.jsx)(n.code,{children:"X-Share-Token"})," HTTP header:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"X-Share-Token: <your_share_token>\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scopes:"})," Each share token has embedded scopes defining exactly which queries are allowed and for which specific resource IDs. For example, a token for sharing inspection ",(0,s.jsx)(n.code,{children:"123"})," of hive ",(0,s.jsx)(n.code,{children:"456"})," might have scopes like:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "version": 1,\n  "allowedQueries": [\n    {\n      "queryName": "inspection",\n      "requiredArgs": { "id": "123" }\n    },\n    {\n      "queryName": "hive",\n      "requiredArgs": { "id": "456" }\n    }\n    // Potentially other related read-only queries like apiary, frames, etc.\n  ]\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Validation & Enforcement:"})," The ",(0,s.jsx)(n.code,{children:"graphql-router"})," validates the ",(0,s.jsx)(n.code,{children:"X-Share-Token"})," by calling the ",(0,s.jsx)(n.code,{children:"validateShareToken"})," query on the ",(0,s.jsx)(n.code,{children:"user-cycle"})," service. If the token is valid, the router ",(0,s.jsx)(n.strong,{children:"enforces"})," the embedded scopes by parsing the incoming GraphQL request. It checks if the requested operation (query) and its arguments match an entry in the token's ",(0,s.jsx)(n.code,{children:"allowedQueries"}),". Requests attempting operations or arguments outside the defined scopes, or any mutations, will be denied directly by the router with a ",(0,s.jsx)(n.code,{children:"403 Forbidden"})," error before reaching downstream services."]}),"\n"]}),"\n",(0,s.jsx)("iframe",{src:"https://graphql.gratheon.com/graphql",width:"100%",height:"700"})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);