"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1890],{46180:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=s(74848),t=s(28453);const r={sidebar_position:1},o=void 0,a={id:"beehive-sensors/Installation",title:"Installation",description:"Setting up Arduino IDE for firmware upload",source:"@site/docs/beehive-sensors/Installation.md",sourceDirName:"beehive-sensors",slug:"/beehive-sensors/Installation",permalink:"/docs/beehive-sensors/Installation",draft:!1,unlisted:!1,editUrl:"https://github.com/gratheon/website/tree/main/packages/create-docusaurus/templates/shared/docs/beehive-sensors/Installation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udf21\ufe0f Beehive IoT sensors",permalink:"/docs/beehive-sensors/"},next:{title:"3d model",permalink:"/docs/beehive-sensors/3d model"}},c={},d=[{value:"Setting up Arduino IDE for firmware upload",id:"setting-up-arduino-ide-for-firmware-upload",level:3},{value:"Uploading firmware",id:"uploading-firmware",level:3},{value:"Configuring powered-on ESP32",id:"configuring-powered-on-esp32",level:3}];function l(e){const n={a:"a",code:"code",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"setting-up-arduino-ide-for-firmware-upload",children:"Setting up Arduino IDE for firmware upload"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["download ",(0,i.jsx)(n.a,{href:"https://www.arduino.cc/en/software",children:"Arduino IDE"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["under preferences, set this URL as extra sources ",(0,i.jsx)(n.a,{href:"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json",children:"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["ESP32 chips come in different flavours. If you got same component as described in the bill of materials - ",(0,i.jsx)(n.a,{href:"/docs/beehive-sensors/components/ESP32",children:"ESP32"}),", then connect it over USB to your machine"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Choose ",(0,i.jsx)(n.code,{children:"ESP32-WROOM-DA Module"})," from device list\n",(0,i.jsx)(n.img,{src:s(1168).A+"",width:"1372",height:"988"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Make sure to change Arduino IDE upload speed to 115200 baud under Tools so that your device can receive data when you upload it"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(43338).A+"",width:"650",height:"169"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Install\xa0",(0,i.jsx)(n.a,{href:"https://github.com/milesburton/Arduino-Temperature-Control-Library",children:"DallasTemperature@3.9.0"}),"\xa0library in Arduino IDE (DallasTemperature@3.9.0"]}),"\n",(0,i.jsxs)(n.li,{children:["Install\xa0",(0,i.jsx)(n.a,{href:"https://github.com/RobTillaart/HX711",children:"HX711"})," library (by RobTillaart) in Arduino IDE"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"uploading-firmware",children:"Uploading firmware"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Checkout our client firmware ",(0,i.jsx)(n.code,{children:"git clone git@github.com:Gratheon/beehive-sensors.git"})]}),"\n",(0,i.jsxs)(n.li,{children:["Upload code to the device using a button ",(0,i.jsx)(n.code,{children:"->"}),". You should see something like:\n",(0,i.jsx)(n.img,{src:s(36612).A+"",width:"1516",height:"344"})]}),"\n",(0,i.jsxs)(n.li,{children:["Click on the reset button (",(0,i.jsx)(n.code,{children:"FN"}),") on the chip"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"configuring-powered-on-esp32",children:"Configuring powered-on ESP32"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Connect to the ESP32 WIFI access point ",(0,i.jsx)(n.code,{children:"gratheon"}),", use password\xa0",(0,i.jsx)(n.code,{children:"gratheon"})]}),"\n",(0,i.jsxs)(n.li,{children:["Open browser and navigate to wifi access point default gateway -\xa0",(0,i.jsx)(n.a,{href:"http://192.168.4.1",children:"http://192.168.4.1"})]}),"\n",(0,i.jsxs)(n.li,{children:["Enter the configuration:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"WiFi credentials (SSID, password) for the sensor to connect to the internet"}),"\n",(0,i.jsxs)(n.li,{children:["Hive ID - to identify the hive that is being monitored in web-app. You can take that you can take from URL, for example in\xa0",(0,i.jsx)(n.code,{children:"https://app.gratheon.com/apiaries/7/hives/54"})," the\xa0here ID is the last digits\xa0",(0,i.jsx)(n.code,{children:"54"})]}),"\n",(0,i.jsxs)(n.li,{children:["API Token - to identify request belonging to user (you). You can generate token from account settings at\xa0",(0,i.jsx)(n.a,{href:"https://app.gratheon.com/account",children:"https://app.gratheon.com/account"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Click\xa0",(0,i.jsx)(n.code,{children:"Save"}),"\xa0button. Your ESP32 will restart and connect to your WIFI network and start sending data to the telemetry API service"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(70248).A+"",width:"1508",height:"1022"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},43338:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Screenshot 2024-07-22 at 03.42.43-d1eb3deb39e428309cc198e3383b8aae.png"},1168:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Screenshot 2024-11-11 at 01.33.06-28801c92709a30fa8000c4b84c734bd8.png"},36612:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Screenshot 2024-11-11 at 01.37.37-dd4ab75becf5a5ea159653b20d9fdaeb.png"},70248:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/iot-server-91df2b2eaa011bc02861191f5582c163.png"},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);