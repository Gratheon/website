"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[751],{8133:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var n=t(74848),i=t(28453);const r={title:"Display - LCD1602",price:"2.64"},o=void 0,c={id:"beehive-sensors/components/display",title:"Display - LCD1602",description:"https://www.aliexpress.com/item/1005006100081942.html",source:"@site/docs/beehive-sensors/components/display.md",sourceDirName:"beehive-sensors/components",slug:"/beehive-sensors/components/display",permalink:"/docs/beehive-sensors/components/display",draft:!1,unlisted:!1,editUrl:"https://github.com/gratheon/website/tree/main/packages/create-docusaurus/templates/shared/docs/beehive-sensors/components/display.md",tags:[],version:"current",frontMatter:{title:"Display - LCD1602",price:"2.64"},sidebar:"tutorialSidebar",previous:{title:"Aluminium Enclosure",permalink:"/docs/beehive-sensors/components/case"},next:{title:"Screws M4 x 25mm",permalink:"/docs/beehive-sensors/components/screws"}},a={},l=[];function p(e){const s={a:"a",code:"code",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"https://www.aliexpress.com/item/1005006100081942.html",children:"https://www.aliexpress.com/item/1005006100081942.html"}),"\n",(0,n.jsx)(s.a,{href:"https://github.com/blackhack/LCD_I2C",children:"https://github.com/blackhack/LCD_I2C"})]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:t(10413).A+"",width:"1354",height:"1016"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:t(64724).A+"",width:"1518",height:"756"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"#include <LCD_I2C.h>\n\nLCD_I2C lcd(0x27, 16, 2); // Default address of most PCF8574 modules, change according\n\nvoid setup()\n{\n    lcd.begin(); // If you are using more I2C devices using the Wire library use lcd.begin(false)\n                 // this stop the library(LCD_I2C) from calling Wire.begin()\n    // Note: On ESP32 you would rather use:\n    //\n    //   lcd.begin(4,5);\n    //\n    // which maps 'Wire' sda to pin 4 and scl to pin 5 in this example.\n\n    lcd.backlight();\n}\n\nvoid loop()\n{\n    lcd.print(\"     Hello\"); // You can make spaces using well... spaces\n    lcd.setCursor(5, 1); // Or setting the cursor in the desired position.\n}\n\n"})}),"\n",(0,n.jsx)("iframe",{width:"100%",height:"400",src:"https://www.youtube.com/embed/COssWn4Pcm4",title:"Using LCD1602 or LCD2004 with ESP32",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},10413:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/20250119_131627-4c9c13773e3bfb6fd78f3b6368c7e7f0.webp"},64724:(e,s,t)=>{t.d(s,{A:()=>n});const n=t.p+"assets/images/esp32_LCD_bb-9ba73a572a47d3ddc410209049c50fb2.webp"},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>c});var n=t(96540);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);